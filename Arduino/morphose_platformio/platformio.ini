; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[featheresp32]
platform = espressif32
board = featheresp32
framework = arduino
board_build.filesystem = littlefs
monitor_speed = 115200
lib_deps = 
    https://github.com/FastLED/FastLED/@3.6.0
	thomasfredericks/Chrono@^1.2.0
	https://github.com/CNMAT/OSC ; could be removed
	robotis-git/Dynamixel2Arduino@^0.7.0
	sparkfun/SparkFun BNO080 Cortex Based IMU@^1.1.12
	sofapirate/Plaquette@^0.4.5
	hideakitai/VectorXf@^0.1.0
	thijse/ArduinoLog@^1.1.1 ; could be removed
	Wire
	SPI
	fabianoriccardi/ESPLogger@^2.0.0 ; could be removed
	heman/AsyncMqttClient-esphome@^2.0.0
    bblanchon/ArduinoJson
    
	
extra_scripts = ./littlefsbuilder.py
build_flags = -D STREAM_INTERVAL=100
			  -D IMU_SAMPLE_RATE=50
			  -D IMU_VECTOR_MODE_ROTATION=0
			  -D IMU_VECTOR_MODE_GEOMAGNETIC=1
			  -D MAIN_IMU_VECTOR_MODE=IMU_VECTOR_MODE_GEOMAGNETIC
			  -D SIDE_IMU_VECTOR_MODE=IMU_VECTOR_MODE_ROTATION
			  -D N_ROBOTS=3	;Number of robots.

				;Battery energy thresholds.
				;The low point for a NiMH (based on a cell at 1.2V) is 1.0V,
				;so in our 10-cell battery pack this means that we have to stop at 10V.
				;However we give ourselves a slightly higher target of 10.5V.
			  -D ENERGY_VOLTAGE_LOW=10.5f   ;Low energy
			  -D ENERGY_VOLTAGE_CRITICAL=9.8f  ;Critical energy

				-D MOTOR_TEMPERATURE_COOLDOWN=50 ; Temperature above which the motor is considered to be hot.
				-D MOTOR_TEMPERATURE_CRITICAL=65 ; Temperature above which the motor is considered to be critical.


; upload_protocol = espota

[env:debug_robot1]
 extends = featheresp32
 build_flags =  ${featheresp32.build_flags}
 				-D ROBOT_ID=1
 				-D MORPHOSE_DEBUG
				-D DEBUG_MODE=true
				;-D CORE_DEBUG_LEVEL=4
;  monitor_filters = esp32_exception_decoder , time
;  upload_port = 192.168.0.110

[env:debug_robot2]
 extends = featheresp32
 build_flags =  ${featheresp32.build_flags}
 				-D ROBOT_ID=2
 				-D MORPHOSE_DEBUG
				-D DEBUG_MODE=true
				;-D CORE_DEBUG_LEVEL=4
;  monitor_filters = esp32_exception_decoder , time
;  upload_port = 192.168.0.120


[env:debug_robot3]
 extends = featheresp32
 build_flags =  ${featheresp32.build_flags}
 				-D ROBOT_ID=3
 				-D MORPHOSE_DEBUG
				-D DEBUG_MODE=true
				;-D CORE_DEBUG_LEVEL=4
;  monitor_filters = esp32_exception_decoder , time
;  upload_port = 192.168.0.130

 
[env:debug_robot4]
extends = featheresp32
build_flags = ${featheresp32.build_flags}
	-D ROBOT_ID=4
	-D MORPHOSE_DEBUG
	-D DEBUG_MODE=true
monitor_filters = esp32_exception_decoder , time
; upload_protocol = espota
; upload_port = 192.168.0.120
; upload_flags = -p 3232


[env:lfs_format]
extends = featheresp32
build_flags = -D LFS_FORMAT
